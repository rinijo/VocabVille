name: Deploy to GitHub Pages (React Router static client)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ðŸ”Ž Detect where package.json is (root or subfolder)
      - name: Detect app directory
        id: detect
        run: |
          set -e
          APP_DIR="$(find . -maxdepth 3 -type f -name package.json -not -path '*/node_modules/*' -printf '%h\n' | head -n1)"
          if [ -z "$APP_DIR" ]; then
            echo "No package.json found. Did you commit it?" >&2
            exit 1
          fi
          echo "Found app dir: $APP_DIR"
          echo "app_dir=$APP_DIR" >> "$GITHUB_OUTPUT"

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ steps.detect.outputs.app_dir }}/package-lock.json

      - name: Install deps
        run: |
          if [ -f "${{ steps.detect.outputs.app_dir }}/package-lock.json" ]; then
            npm ci --prefix "${{ steps.detect.outputs.app_dir }}"
          else
            npm install --prefix "${{ steps.detect.outputs.app_dir }}"
          fi

      - name: Build
        run: npm run build --prefix "${{ steps.detect.outputs.app_dir }}"

      # ðŸ§­ Find the built folder, create SPA fallback, and pick upload path
      - name: Prepare Pages artifact (SPA fallback + disable Jekyll)
        id: prep
        run: |
          set -e
          APP_DIR="${{ steps.detect.outputs.app_dir }}"
          echo "== Build tree =="
          if [ -d "$APP_DIR/build" ]; then
            ls -laR "$APP_DIR/build" | sed -n '1,200p'
          else
            echo "No build/ directory found under $APP_DIR" >&2
            exit 1
          fi

          # Prefer build/client if it exists, else build
          if [ -d "$APP_DIR/build/client" ]; then
            OUT_DIR="$APP_DIR/build/client"
          else
            OUT_DIR="$APP_DIR/build"
          fi
          echo "Using OUT_DIR=$OUT_DIR"

          # Locate index.html (client or root)
          if [ -f "$OUT_DIR/index.html" ]; then
            INDEX="$OUT_DIR/index.html"
          elif [ -f "$APP_DIR/build/index.html" ]; then
            INDEX="$APP_DIR/build/index.html"
          else
            echo "Could not find index.html in $OUT_DIR or $APP_DIR/build" >&2
            exit 1
          fi
          echo "Found index at: $INDEX"

          # Create 404.html alongside index.html for SPA fallback
          cp -f "$INDEX" "$(dirname "$INDEX")/404.html" || true

          # Disable Jekyll in chosen out dir
          touch "$OUT_DIR/.nojekyll" || touch "$APP_DIR/build/.nojekyll"

          echo "upload_path=$OUT_DIR" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.prep.outputs.upload_path }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
