name: Deploy to GitHub Pages (React Router static client)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 🔎 Detect the folder that contains package.json
      - name: Detect app directory
        id: detect
        run: |
          set -e
          echo "Repo root:"
          pwd
          echo "--- ls -la ---"
          ls -la
          echo "--- find package.json (max depth 3) ---"
          APP_DIR="$(find . -maxdepth 3 -type f -name package.json -not -path '*/node_modules/*' -printf '%h\n' | head -n1)"
          if [ -z "$APP_DIR" ]; then
            echo "❌ No package.json found. Did you commit it?"
            exit 1
          fi
          echo "Found package.json in: $APP_DIR"
          echo "app_dir=$APP_DIR" >> "$GITHUB_OUTPUT"

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ steps.detect.outputs.app_dir }}/package-lock.json

      - name: Install deps
        run: |
          if [ -f "${{ steps.detect.outputs.app_dir }}/package-lock.json" ]; then
            npm ci --prefix "${{ steps.detect.outputs.app_dir }}"
          else
            npm install --prefix "${{ steps.detect.outputs.app_dir }}"
          fi

      - name: Build
        run: npm run build --prefix "${{ steps.detect.outputs.app_dir }}"

      - name: Prepare Pages artifact (SPA fallback + disable Jekyll)
        run: |
          cp -f "${{ steps.detect.outputs.app_dir }}/build/client/index.html" "${{ steps.detect.outputs.app_dir }}/build/client/404.html"
          touch "${{ steps.detect.outputs.app_dir }}/build/client/.nojekyll"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.detect.outputs.app_dir }}/build/client

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
